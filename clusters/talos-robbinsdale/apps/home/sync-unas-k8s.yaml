apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: truenas-k8s-pvc
  namespace: home
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10000Gi
  storageClassName: ""
  volumeName: truenas-k8s-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: truenas-k8s-pv
  namespace: home
spec:
  capacity:
    storage: 10000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/vault/k8s
    server: truenas.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unas-k8s-pvc
  namespace: home
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10000Gi
  storageClassName: smb
  volumeName: unas-k8s-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: unas-k8s-pv
spec:
  capacity:
    storage: 10000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: smb
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
  csi:
    driver: smb.csi.k8s.io
    # volumeHandle format: {smb-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: smb-server.default.svc.cluster.local/k8s/sync
    volumeAttributes:
      source: //192.168.50.115/k8s
    nodeStageSecretRef:
      name: csi-smbcreds
      namespace: kube-system
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: unas-k8s-destination
  namespace: home
spec:
  rsync:
    copyMethod: Direct
    capacity: 10000Gi
    destinationPVC: unas-k8s-pvc
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: truenas-k8s-source
  namespace: home
spec:
  sourcePVC: truenas-k8s-pvc
  trigger:
    manual: first
  rsync:
    sshKeys: volsync-rsync-dst-src-unas-k8s-destination
    address: volsync-rsync-dst-unas-k8s-destination
    copyMethod: Direct
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-tv-sync
  namespace: home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr-tv-sync
  template:
    metadata:
      labels:
        app: sonarr-tv-sync
    spec:
      containers:
      - name: sonarr-tv-sync
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache rsync && \
          rsync -av --delete /truenas/media/sonarr-tv/ /unas/media/sonarr-tv/ && \
          echo "done" && \
          sleep infinity
        volumeMounts:
        - name: truenas-volume
          mountPath: /truenas
        - name: unas-volume
          mountPath: /unas
      volumes:
      - name: truenas-volume
        persistentVolumeClaim:
          claimName: truenas-k8s-pvc
      - name: unas-volume
        persistentVolumeClaim:
          claimName: unas-k8s-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr-movies-sync
  namespace: home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr-movies-sync
  template:
    metadata:
      labels:
        app: radarr-movies-sync
    spec:
      containers:
      - name: radarr-movies-sync
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache rsync && \
          rsync -av /truenas/media/radarr-movies/ /unas/media/radarr-movies/ && \
          echo "done" && \
          sleep infinity
        volumeMounts:
        - name: truenas-volume
          mountPath: /truenas
        - name: unas-volume
          mountPath: /unas
      volumes:
      - name: truenas-volume
        persistentVolumeClaim:
          claimName: truenas-k8s-pvc
      - name: unas-volume
        persistentVolumeClaim:
          claimName: unas-k8s-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: truenas-pics-pvc
  namespace: home
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10000Gi
  storageClassName: ""
  volumeName: truenas-pics-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: truenas-k8s-pv
  namespace: home
spec:
  capacity:
    storage: 10000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/vault/pics
    server: truenas.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-pics-sync
  namespace: home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-pics-sync
  template:
    metadata:
      labels:
        app: immich-pics-sync
    spec:
      containers:
      - name: immich-pics-sync
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache rsync && \
          rsync -av /truenas/apple_photos_library/ /unas/pics/ && \
          echo "done" && \
          sleep infinity
        volumeMounts:
        - name: truenas-volume
          mountPath: /truenas
        - name: unas-volume
          mountPath: /unas
      volumes:
      - name: truenas-volume
        persistentVolumeClaim:
          claimName: truenas-pics-pvc
      - name: unas-volume
        persistentVolumeClaim:
          claimName: unas-k8s-pvc