apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sabnzbd
  name: sabnzbd
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sabnzbd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sabnzbd
    spec:
      containers:
      - name: sabnzbd
        env:
        - name: SABNZBD__HOST_WHITELIST_ENTRIES
          value: sabnzbd, sabnzbd.media, sabnzbd.media.svc, sabnzbd.media.svc.cluster,
            sabnzbd.media.svc.cluster.local, sabnzbd.killinit.internal, sab.killinit.cc,
            sabnzbd.${CLUSTER_DOMAIN},
        - name: SABNZBD__PORT
          value: "80"
        - name: TZ
          value: ${TIMEZONE}
        image: ghcr.io/home-operations/sabnzbd:4.5.5@sha256:da57e01cdebc547852b6df85c8df8c0e4d87792742c7608c5590dc653b184e8c
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /config/logs
          name: logs
        - mountPath: /media
          name: media
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 10000
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sabnzbd-config
      - emptyDir: {}
        name: logs
      - name: media
        persistentVolumeClaim:
          claimName: sabnzbd-media